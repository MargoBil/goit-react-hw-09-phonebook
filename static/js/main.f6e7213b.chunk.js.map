{"version":3,"sources":["redux/selectors/themeSelectors.js","redux/selectors/authSelectors.js","redux/actions/index.js","redux/actions/actions.js","components/UserMenu/UserMenu.module.css","components/UserProfile/UserProfile.module.css","components/Navigation/Navigation.module.css","redux/actions/authOperations.js","components/ThemeButton/ThemeButton.module.css","redux/reducers/contactsReducer.js","redux/reducers/themeReducer.js","redux/reducers/authReducer.js","redux/reducers/rootReducer.js","redux/store.js","components/ThemeButton/ThemeButton.js","components/Wrapper/Wrapper.js","routes/routes.js","components/UserProfile/UserProfile.js","components/UserMenu/UserMenu.js","components/Navigation/Navigation.js","components/Routes/PrivatRoute.js","components/Routes/PublicRoute.js","components/App.js","index.js"],"names":["getTheme","state","theme","themeColor","getCurrentUserName","auth","user","name","isAuthenticated","token","addNameRequest","createAction","addNameSuccess","addNameFailure","fetchNamesRequest","fetchNamesSuccess","fetchNamesFailure","deleteNameRequest","deleteNameSuccess","deleteNameFailure","changeFilter","toggleThemeSuccess","logupRequest","logupSuccess","logupFailure","loginRequest","loginSuccess","loginFailure","logoutRequest","logoutSuccess","logoutFailure","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserFailure","module","exports","axios","defaults","baseURL","headers","common","Authorization","logUp","credentials","dispatch","a","actions","post","data","logIn","logOut","getCurrentUser","getState","persistedToken","get","items","createReducer","action","payload","_","filter","contact","id","INITIAL_USER_STATE","email","error","contactsReducer","combineReducers","themeReducer","authReducer","persistConfig","key","storage","whitelist","persistConfigTheme","store","configureStore","reducer","contacts","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","mapDispatchToProps","toggleTheme","connect","themeSelectors","currentTheme","className","s","type","onClick","children","isThemeLigth","document","body","style","backgroundColor","contactsPage","path","lable","exact","component","lazy","signUpPage","restricted","signInPage","onLogout","operations","selectors","themeSelector","box","btnBox","isAuth","routes","activeClassName","active","to","list","item","authSelectors","Component","routeProps","render","props","App","this","onGetCurrentUser","fallback","authOperations","ReactDOM","loading","getElementById"],"mappings":"+IAEe,KACXA,SAHa,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,c,gCCGvB,KACXC,mBAJuB,SAAAH,GAAK,OAAIA,EAAMI,KAAKC,KAAKC,MAKhDC,gBAJoB,SAAAP,GAAK,OAAIA,EAAMI,KAAKI,S,wzBCG/BC,EAAiBC,YCHH,mBDIdC,EAAiBD,YCHH,mBDIdE,EAAiBF,YCHH,mBDKdG,EAAoBH,YCJJ,sBDKhBI,EAAoBJ,YCJJ,sBDKhBK,EAAoBL,YCJJ,sBDMhBM,EAAoBN,YCLH,sBDMjBO,EAAoBP,YCLH,sBDMjBQ,EAAoBR,YCLH,sBDOjBS,EAAeT,YCNC,eDUhBU,GADqBV,YCPE,uBDQFA,YCPE,wBDWvBW,GAHqBX,YCPE,uBDURA,YCRC,sBDShBY,EAAeZ,YCRC,qBDShBa,EAAeb,YCRC,qBDUhBc,EAAed,YCTC,qBDUhBe,EAAef,YCTC,qBDUhBgB,EAAehB,YCTC,qBDWhBiB,EAAgBjB,YCVC,sBDWjBkB,EAAgBlB,YCVC,sBDWjBmB,EAAgBnB,YCVC,sBDYjBoB,EAAwBpB,YCXD,2BDYvBqB,EAAwBrB,YCXD,2BDYvBsB,EAAwBtB,YCXD,4B,mBC1BpCuB,EAAOC,QAAU,CAAC,IAAM,sBAAsB,UAAY,4BAA4B,SAAW,qDAAqD,OAAS,2B,mBCA/JD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,SAAW,2DAA2D,OAAS,4BAA4B,IAAM,yBAAyB,SAAW,8BAA8B,QAAU,2D,mBCA1PD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,UAAY,8BAA8B,SAAW,yDAAyD,OAAS,6B,qFCEzMC,IAAMC,SAASC,QAAU,2CAEzB,IAAM7B,EAAQ,SACRA,GACF2B,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDhC,IAFtDA,EAAQ,WAKV2B,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IAoDnC,KACbC,MAhDY,SAAAC,GAAW,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,sEAEzBD,EAASE,OAFgB,SAGJV,IAAMW,KAAK,gBAAiBJ,GAHxB,gBAGlBK,EAHkB,EAGlBA,KACPvC,EAAUuC,EAAKvC,OACfmC,EAASE,IAAqBE,IALL,kDAOzBJ,EAASE,IAAA,OAPgB,0DAAJ,uDAiDvBG,MAvCY,SAAAN,GAAW,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,sEAEzBD,EAASE,OAFgB,SAGJV,IAAMW,KAAK,eAAgBJ,GAHvB,gBAGlBK,EAHkB,EAGlBA,KACPvC,EAAUuC,EAAKvC,OACfmC,EAASE,IAAqBE,IALL,kDAOzBJ,EAASE,IAAA,OAPgB,0DAAJ,uDAwCvBI,OA9Ba,yDAAM,WAAMN,GAAN,SAAAC,EAAA,sEAEjBD,EAASE,OAFQ,SAGXV,IAAMW,KAAK,iBAHA,OAIjBtC,IAEAmC,EAASE,OANQ,gDAQjBF,EAASE,IAAA,OARQ,yDAAN,uDA+BbK,eApBqB,yDAAM,WAAOP,EAAUQ,GAAjB,qBAAAP,EAAA,oEAIrBO,IADYC,EAHS,EAGvBhD,KAAOI,MAHgB,wDAQzBA,EAAU4C,GACVT,EAASE,OATgB,SAUJV,IAAMkB,IAAI,kBAVN,gBAUlBN,EAVkB,EAUlBA,KACPJ,EAASE,IAA8BE,IAXd,kDAazBJ,EAASE,IAAA,OAbgB,0DAAN,2D,mBC7CvBZ,EAAOC,QAAU,CAAC,SAAW,8BAA8B,QAAU,2D,4MCexDoB,EAAQC,YAAc,IAAD,mBAC/BV,KAbe,SAAC7C,EAAOwD,GACxB,MAAM,GAAN,mBAAWxD,GAAX,CAAkBwD,EAAOC,aAWO,cAE/BZ,KAJkB,SAACa,EAAGF,GAAJ,OAAeA,EAAOC,WAET,cAG/BZ,KAXqB,SAAC7C,EAAOwD,GAC9B,OAAOxD,EAAM2D,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOL,EAAOC,cAOrB,IAMrBE,EAASJ,YAAc,GAAD,eAChCV,KAXoB,SAACa,EAAGF,GAAJ,OAAeA,EAAOC,YCNhCvD,EAAaqD,YAAc,QAAD,eACpCV,KAHmB,SAACa,EAAGF,GAAJ,OAAeA,EAAOC,YCAtCK,EAAqB,CAAExD,KAAM,KAAMyD,MAAO,MAEnC1D,EAAOkD,YAAcO,GAAD,iBAAC,EAC7BjB,KAAuB,SAACa,EAAD,YAAKD,QAAqBpD,QADrB,YAAC,EAE7BwC,KAAuB,SAACa,EAAD,YAAKD,QAAqBpD,QAFrB,YAAC,EAG7BwC,KAAgC,SAACa,EAAD,YAAKD,WAHT,YAAC,EAI7BZ,KAAwB,kBAAMiB,KAJF,IAMpBtD,EAAQ+C,YAAc,MAAD,mBAC7BV,KAAuB,SAACa,EAAD,YAAKD,QAAqBjD,SADpB,cAE7BqC,KAAuB,SAACa,EAAD,YAAKD,QAAqBjD,SAFpB,cAG7BqC,KAAwB,kBAAM,QAHD,IAKrBmB,EAAQT,YAAc,MAAD,mBAC7BV,KAAuB,SAACa,EAAD,YAAKD,WADC,cAE7BZ,KAAuB,SAACa,EAAD,YAAKD,WAFC,cAG7BZ,KAAwB,SAACa,EAAD,YAAKD,WAHA,cAI7BZ,KAAgC,SAACa,EAAD,YAAKD,WAJR,ICXrBQ,EAAkBC,YAAgB,CAC7CZ,QACAK,WAGWQ,EAAeD,YAAgB,CAC1ChE,eAGWkE,EAAcF,YAAgB,CACzC7D,OACAG,QACAwD,UCCIK,EAAgB,CACpBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAERC,EAAqB,CACzBH,IAAK,QACLC,YACAC,UAAW,CAAC,eAGDE,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUZ,EACVhE,MAAO6E,YAAeL,EAAoBN,GAC1C/D,KAAM0E,YAAeT,EAAeD,IAEtCW,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAKnDC,EAAYC,YAAahB,G,gEClBhCiB,EAAqB,CACzBC,YAAaxE,KAGAyE,eARS,SAAA7F,GAAK,MAAK,CAChCC,MAAO6F,IAAe/F,SAASC,MAOO2F,EAAzBE,EArBK,SAAC,GAA0B,IACzCE,EADgB9F,EAAwB,EAAxBA,MAAO2F,EAAiB,EAAjBA,YAG3B,OADqBG,EAAX,UAAV9F,EAAoC,OAA0B,QAE5D,4BACE+F,UAAWC,IAAE,MAAD,OAAOhG,IACnBiG,KAAK,SACLC,QAAS,kBAAMP,EAAYG,KAE1B9F,MCFQ4F,eAHS,SAAA7F,GAAK,MAAK,CAChCC,MAAO6F,IAAe/F,SAASC,MAElB6F,EAVC,SAAC,GAAuB,IAAtB5F,EAAqB,EAArBA,MAAOmG,EAAc,EAAdA,SACjBC,EAAyB,UAAVpG,EAIrB,OAFKqG,SAASC,KAAKC,MAAMC,gBADzBJ,EAC2C,UACA,UACpC,6BAAMD,MCoBA,GAAEM,aA5BI,CACnBC,KAAM,YACNC,MAAO,eACPC,OAAO,EACPC,UAAWC,gBAAK,kBACd,iCAuB2BC,WAnBZ,CACjBL,KAAM,cACNC,MAAO,aACPC,OAAO,EACPC,UAAWC,gBAAK,kBACd,gCAEFE,YAAY,GAY6BC,WAVxB,CACjBP,KAAM,cACNC,MAAO,aACPC,OAAO,EACPC,UAAWC,gBAAK,kBACd,gCAEFE,YAAY,I,iCCGRtB,EAAqB,CACzBwB,SAAUC,IAAWnE,QAGR4C,eATS,SAAA7F,GAAK,MAAK,CAChCM,KAAM+G,IAAUlH,mBAAmBH,GACnCE,WAAYoH,IAAcvH,SAASC,MAOG2F,EAAzBE,EA1BK,SAAC,GAAkC,IAAjCvF,EAAgC,EAAhCA,KAAM6G,EAA0B,EAA1BA,SAAUjH,EAAgB,EAAhBA,WACpC,OACE,yBAAK8F,UAAWC,IAAEsB,KAChB,0BAAMvB,UAAWC,IAAE,OAAD,OAAQ/F,KAA1B,YAAmDI,EAAnD,KACA,yBAAK0F,UAAWC,IAAEuB,QAChB,4BACExB,UAAWC,IAAE,MAAD,OAAO/F,IACnBgG,KAAK,SACLC,QAASgB,GAHX,gB,oBC0BOtB,gBAJS,SAAA7F,GAAK,MAAK,CAChCyH,OAAQJ,IAAU9G,gBAAgBP,GAClCE,WAAY4F,IAAe/F,SAASC,MAEvB6F,EA5BE,SAAC,GAA0B,IAAzB4B,EAAwB,EAAxBA,OAAQvH,EAAgB,EAAhBA,WAClB8G,EAA0BU,EAA1BV,WAAYE,EAAcQ,EAAdR,WACnB,OACE,yBAAKlB,UAAWC,KAAEsB,KAChB,kBAAC,IAAD,CACEvB,UAAWC,KAAE,OAAD,OAAQ/F,IACpByH,gBAAiB1B,KAAE2B,OACnBf,OAAK,EACLgB,GAAIb,EAAWL,MAEf,uCAEF,kBAAC,IAAD,CACEX,UAAWC,KAAE,OAAD,OAAQ/F,IACpByH,gBAAiB1B,KAAE2B,OACnBf,OAAK,EACLgB,GAAIX,EAAWP,MAEf,uCAEDc,GAAU,kBAAC,EAAD,U,oBCGF5B,gBAJS,SAAC7F,GAAD,MAAY,CAClCE,WAAY4F,IAAe/F,SAASC,MAGvB6F,EAvBI,SAAC,GAAkB,IAAjB3F,EAAgB,EAAhBA,WACZwG,EAAgBgB,EAAhBhB,aACP,OACE,wBAAIV,UAAWC,KAAE6B,MACf,wBAAI9B,UAAWC,KAAE8B,MACf,kBAAC,IAAD,CACE/B,UAAWC,KAAE,OAAD,OAAQ/F,IACpByH,gBAAiB1B,KAAE2B,OACnBf,OAAK,EACLgB,GAAInB,EAAaC,MAEjB,4CAEF,kBAAC,GAAD,W,SCGOd,gBAJS,SAAC7F,GAAD,MAAY,CAClCO,gBAAiByH,IAAczH,gBAAgBP,MAGlC6F,EArBK,SAAC,GAAD,IACPoC,EADO,EAClBnB,UACAvG,EAFkB,EAElBA,gBACG2H,EAHe,uDAKlB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACC,GACP,OAAO7H,EACL,kBAAC0H,EAAcG,GAEf,kBAAC,IAAD,CAAUP,GAAIH,EAAOR,WAAWP,cCWzBd,gBAJS,SAAC7F,GAAD,MAAY,CAClCO,gBAAiByH,IAAczH,gBAAgBP,MAGlC6F,EAtBK,SAAC,GAAD,IACPoC,EADO,EAClBnB,UACAvG,EAFkB,EAElBA,gBACA0G,EAHkB,EAGlBA,WACGiB,EAJe,oEAMlB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACC,GAAD,OACN7H,GAAmB0G,EACjB,kBAAC,IAAD,CAAUY,GAAIH,EAAOhB,aAAaC,OAElC,kBAACsB,EAAcG,UCNjBC,G,kLAEFC,KAAKF,MAAMG,qB,+BAGH,IACD7B,EAAwCgB,EAAxChB,aAAcM,EAA0BU,EAA1BV,WAAYE,EAAcQ,EAAdR,WACjC,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,WAAD,CAAUsB,SAAU,+BAClB,kBAAC,IAAD,KACE,kBAAC,GAAgB9B,GACjB,kBAAC,GAAgBM,GACjB,kBAAC,GAAgBE,GACjB,kBAAC,IAAD,CAAUW,GAAG,QAGjB,kBAAC,EAAD,W,GAlBUI,aAwBZtC,GAAqB,CACzB4C,iBAAkBE,IAAevF,gBAGpB2C,eAAQ,KAAMF,GAAdE,CAAkCwC,IC7BjDK,IAASP,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUzD,MAAOA,GACf,kBAAC,IAAD,CAAaiE,QAAS,KAAMlD,UAAWA,GACrC,kBAAC,GAAD,SAINa,SAASsC,eAAe,W","file":"static/js/main.f6e7213b.chunk.js","sourcesContent":["const getTheme = state => state.theme.themeColor;\r\n\r\nexport default {\r\n    getTheme\r\n}","const getCurrentUserName = state => state.auth.user.name;\r\nconst isAuthenticated = state => state.auth.token;\r\n\r\nexport default {\r\n    getCurrentUserName,\r\n    isAuthenticated\r\n  };\r\n  ","import {createAction} from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\n//contacts action creator\r\nexport const addNameRequest = createAction(actions.ADD_REQUEST);\r\nexport const addNameSuccess = createAction(actions.ADD_SUCCESS);\r\nexport const addNameFailure = createAction(actions.ADD_FAILURE);\r\n\r\nexport const fetchNamesRequest = createAction(actions.FETCH_REQUEST);\r\nexport const fetchNamesSuccess = createAction(actions.FETCH_SUCCESS);\r\nexport const fetchNamesFailure = createAction(actions.FETCH_FAILURE);\r\n\r\nexport const deleteNameRequest = createAction(actions.DELETE_REQUEST);\r\nexport const deleteNameSuccess = createAction(actions.DELETE_SUCCESS);\r\nexport const deleteNameFailure = createAction(actions.DELETE_FAILURE);\r\n\r\nexport const changeFilter = createAction(actions.CHANGE_FILTER);\r\n\r\n//theme action creator\r\nexport const toggleThemeRequest = createAction(actions.TOGGLE_THEME_REQUEST);\r\nexport const toggleThemeSuccess = createAction(actions.TOGGLE_THEME_SUCCESS);\r\nexport const toggleThemeFailure = createAction(actions.TOGGLE_THEME_FAILURE);\r\n\r\n//auth action creator \r\nexport const logupRequest = createAction(actions.LOGUP_REQUEST);\r\nexport const logupSuccess = createAction(actions.LOGUP_SUCCESS);\r\nexport const logupFailure = createAction(actions.LOGUP_FAILURE);\r\n\r\nexport const loginRequest = createAction(actions.LOGIN_REQUEST);\r\nexport const loginSuccess = createAction(actions.LOGIN_SUCCESS);\r\nexport const loginFailure = createAction(actions.LOGIN_FAILURE);\r\n\r\nexport const logoutRequest = createAction(actions.LOGOUT_REQUEST);\r\nexport const logoutSuccess = createAction(actions.LOGOUT_SUCCESS);\r\nexport const logoutFailure = createAction(actions.LOGOUT_FAILURE);\r\n\r\nexport const getCurrentUserRequest = createAction(actions.CURRENT_USER_REQUEST);\r\nexport const getCurrentUserSuccess = createAction(actions.CURRENT_USER_SUCCESS);\r\nexport const getCurrentUserFailure = createAction(actions.CURRENT_USER_FAILURE);\r\n\r\n\r\n","//contacts actions\r\nexport const ADD_REQUEST = \"name/addRequest\";\r\nexport const ADD_SUCCESS = \"name/addSuccess\";\r\nexport const ADD_FAILURE = \"name/addFailure\";\r\nexport const FETCH_REQUEST = \"names/fetchRequest\";\r\nexport const FETCH_SUCCESS = \"names/fetchSuccess\";\r\nexport const FETCH_FAILURE = \"names/fetchFailure\";\r\nexport const DELETE_REQUEST = \"name/deleteRequest\";\r\nexport const DELETE_SUCCESS = \"name/deleteSuccess\";\r\nexport const DELETE_FAILURE = \"name/deleteFailure\";\r\nexport const CHANGE_FILTER = 'name/filter';\r\n//theme actions\r\nexport const TOGGLE_THEME_REQUEST = \"theme/toggleRequest\";\r\nexport const TOGGLE_THEME_SUCCESS = \"theme/toggleSuccess\";\r\nexport const TOGGLE_THEME_FAILURE = \"theme/toggleFailure\";\r\n//auth actions\r\nexport const LOGUP_REQUEST = \"auth/logupRequest\";\r\nexport const LOGUP_SUCCESS = \"auth/logupSuccess\";\r\nexport const LOGUP_FAILURE = \"auth/logupFailure\";\r\nexport const LOGIN_REQUEST = \"auth/loginRequest\";\r\nexport const LOGIN_SUCCESS = \"auth/loginSuccess\";\r\nexport const LOGIN_FAILURE = \"auth/loginFailure\";\r\nexport const LOGOUT_REQUEST = \"auth/logoutRequest\";\r\nexport const LOGOUT_SUCCESS = \"auth/logoutSuccess\";\r\nexport const LOGOUT_FAILURE = \"auth/logoutFailure\";\r\nexport const CURRENT_USER_REQUEST = \"auth/currentUserRequest\";\r\nexport const CURRENT_USER_SUCCESS = \"auth/currentUserSuccess\";\r\nexport const CURRENT_USER_FAILURE = \"auth/currentUserFailure\";\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"UserMenu_box__23SK_\",\"linkLight\":\"UserMenu_linkLight__2CHuG\",\"linkDark\":\"UserMenu_linkDark__R8sVY UserMenu_linkLight__2CHuG\",\"active\":\"UserMenu_active__3lEHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textLight\":\"UserProfile_textLight__2VLhT\",\"textDark\":\"UserProfile_textDark__39M3W UserProfile_textLight__2VLhT\",\"btnBox\":\"UserProfile_btnBox__17gVW\",\"box\":\"UserProfile_box__1OxSz\",\"btnLight\":\"UserProfile_btnLight__3o21G\",\"btnDark\":\"UserProfile_btnDark__1mYQi UserProfile_btnLight__3o21G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Navigation_list__WMpOr\",\"item\":\"Navigation_item__3st2a\",\"linkLight\":\"Navigation_linkLight__3DLdP\",\"linkDark\":\"Navigation_linkDark__6ByoL Navigation_linkLight__3DLdP\",\"active\":\"Navigation_active__32to9\"};","import * as actions from './index';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n//auth operations\r\nconst logUp = credentials => async dispatch => {\r\n  try {\r\n    dispatch(actions.logupRequest());\r\n    const {data} = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    dispatch(actions.logupSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.logupFailure(error));\r\n  }\r\n};\r\nconst logIn = credentials => async dispatch => {\r\n  try {\r\n    dispatch(actions.loginRequest());\r\n    const {data} = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    dispatch(actions.loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.loginFailure(error));\r\n  }\r\n};\r\nconst logOut = () => async dispatch => {\r\n  try {\r\n    dispatch(actions.logoutRequest());\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n\r\n    dispatch(actions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(actions.logoutFailure(error));\r\n  }\r\n};\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      auth: {token: persistedToken},\r\n    } = getState();\r\n    if (!persistedToken) {\r\n      return;\r\n    }\r\n    token.set(persistedToken);\r\n    dispatch(actions.getCurrentUserRequest());\r\n    const {data} = await axios.get('/users/current');\r\n    dispatch(actions.getCurrentUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.getCurrentUserFailure(error));\r\n  }\r\n};\r\nexport default {\r\n  logUp,\r\n  logIn,\r\n  logOut,\r\n  getCurrentUser,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnLight\":\"ThemeButton_btnLight__3lNYB\",\"btnDark\":\"ThemeButton_btnDark__1q-Ed ThemeButton_btnLight__3lNYB\"};","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport * as actions from '../actions';\r\n\r\nconst onAddName = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onDeleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst onChangeFilter = (_, action) => action.payload;\r\n\r\nconst onFetchNames = (_, action) => action.payload;\r\n\r\nexport const items = createReducer([], {\r\n  [actions.addNameSuccess]: onAddName,\r\n  [actions.fetchNamesSuccess]: onFetchNames,\r\n  [actions.deleteNameSuccess]: onDeleteContact,\r\n});\r\n\r\nexport const filter = createReducer('', {\r\n  [actions.changeFilter]: onChangeFilter,\r\n});\r\n","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport * as actions from '../actions';\r\n\r\nconst onToggleTheme = (_, action) => action.payload;\r\n\r\nexport const themeColor = createReducer('Light', {\r\n  [actions.toggleThemeSuccess]: onToggleTheme,\r\n});\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport * as actions from '../actions';\r\n\r\nconst INITIAL_USER_STATE = { name: null, email: null};\r\n\r\nexport const user = createReducer(INITIAL_USER_STATE, {\r\n    [actions.logupSuccess]: (_, {payload}) => payload.user,\r\n    [actions.loginSuccess]: (_, {payload}) => payload.user,\r\n    [actions.getCurrentUserSuccess]: (_, {payload}) => payload,\r\n    [actions.logoutSuccess]: () => INITIAL_USER_STATE\r\n})\r\nexport const token = createReducer(null, {\r\n    [actions.logupSuccess]: (_, {payload}) => payload.token,\r\n    [actions.loginSuccess]: (_, {payload}) => payload.token,\r\n    [actions.logoutSuccess]: () => null\r\n})\r\nexport const error = createReducer(null, {\r\n    [actions.logupFailure]: (_, {payload}) => payload,\r\n    [actions.loginFailure]: (_, {payload}) => payload,\r\n    [actions.logoutFailure]: (_, {payload}) => payload,\r\n    [actions.getCurrentUserFailure]: (_, {payload}) => payload,\r\n})\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { items, filter } from \"./contactsReducer\";\r\nimport { themeColor } from \"./themeReducer\";\r\nimport { user, token, error } from \"./authReducer\";\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport const themeReducer = combineReducers({\r\n  themeColor,\r\n});\r\n\r\nexport const authReducer = combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport {\r\n  contactsReducer,\r\n  themeReducer,\r\n  authReducer,\r\n} from './reducers/rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\nconst persistConfigTheme = {\r\n  key: 'theme',\r\n  storage,\r\n  whitelist: ['themeColor'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    theme: persistReducer(persistConfigTheme, themeReducer),\r\n    auth: persistReducer(persistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport themeSelectors from '../../redux/selectors/themeSelectors';\r\nimport {toggleThemeSuccess} from '../../redux/actions';\r\n\r\nimport s from './ThemeButton.module.css';\r\n\r\nconst ThemeButton = ({theme, toggleTheme}) => {\r\n  let currentTheme;\r\n  theme === 'Light' ? (currentTheme = 'Dark') : (currentTheme = 'Light');\r\n  return (\r\n    <button\r\n      className={s[`btn${theme}`]}\r\n      type=\"button\"\r\n      onClick={() => toggleTheme(currentTheme)}\r\n    >\r\n      {theme}\r\n    </button>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  theme: themeSelectors.getTheme(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toggleTheme: toggleThemeSuccess,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeButton);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport themeSelectors from '../../redux/selectors/themeSelectors';\r\n\r\nconst Wrapper = ({theme, children}) => {\r\n  const isThemeLigth = theme === 'Light';\r\n  isThemeLigth\r\n    ? (document.body.style.backgroundColor = '#ffffff')\r\n    : (document.body.style.backgroundColor = '#0a4658');\r\n  return <div>{children}</div>;\r\n};\r\nconst mapStateToProps = state => ({\r\n  theme: themeSelectors.getTheme(state),\r\n});\r\nexport default connect(mapStateToProps)(Wrapper);\r\n","import { lazy } from \"react\";\r\n\r\nconst contactsPage = {\r\n  path: \"/contacts\",\r\n  lable: \"ContactsPage\",\r\n  exact: true,\r\n  component: lazy(() =>\r\n    import(\"../views/Contacts\" /* webpackChunkName: \"ContactsPage\" */)\r\n  ),\r\n};\r\n\r\nconst signUpPage = {\r\n  path: \"/signUpView\",\r\n  lable: \"SignUpPage\",\r\n  exact: true,\r\n  component: lazy(() =>\r\n    import(\"../views/SignUp\" /* webpackChunkName: \"SignUpPage\" */)\r\n  ),\r\n  restricted: false\r\n};\r\nconst signInPage = {\r\n  path: \"/signInView\",\r\n  lable: \"SignInPage\",\r\n  exact: true,\r\n  component: lazy(() =>\r\n    import(\"../views/SignIn\" /* webpackChunkName: \"SignInPage\" */)\r\n  ),\r\n  restricted: true\r\n};\r\n\r\nexport default { contactsPage, signUpPage, signInPage };\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport selectors from '../../redux/selectors/authSelectors';\r\nimport operations from '../../redux/actions/authOperations';\r\nimport themeSelector from '../../redux/selectors/themeSelectors';\r\n\r\nimport s from './UserProfile.module.css';\r\n\r\nconst UserProfile = ({name, onLogout, themeColor}) => {\r\n  return (\r\n    <div className={s.box}>\r\n      <span className={s[`text${themeColor}`]}>Welcome, {name}!</span>\r\n      <div className={s.btnBox}>\r\n        <button\r\n          className={s[`btn${themeColor}`]}\r\n          type=\"button\"\r\n          onClick={onLogout}\r\n        >\r\n          SignOut\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  name: selectors.getCurrentUserName(state),\r\n  themeColor: themeSelector.getTheme(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: operations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport routes from '../../routes/routes';\r\nimport {connect} from 'react-redux';\r\n\r\nimport UserProfile from '../UserProfile/UserProfile';\r\nimport selectors from '../../redux/selectors/authSelectors';\r\n\r\nimport s from './UserMenu.module.css';\r\nimport themeSelectors from '../../redux/selectors/themeSelectors';\r\n\r\nconst UserMenu = ({isAuth, themeColor}) => {\r\n  const {signUpPage, signInPage} = routes;\r\n  return (\r\n    <div className={s.box}>\r\n      <NavLink\r\n        className={s[`link${themeColor}`]}\r\n        activeClassName={s.active}\r\n        exact\r\n        to={signUpPage.path}\r\n      >\r\n        <h2>SignUp</h2>\r\n      </NavLink>\r\n      <NavLink\r\n        className={s[`link${themeColor}`]}\r\n        activeClassName={s.active}\r\n        exact\r\n        to={signInPage.path}\r\n      >\r\n        <h2>SignIn</h2>\r\n      </NavLink>\r\n      {isAuth && <UserProfile />}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuth: selectors.isAuthenticated(state),\r\n  themeColor: themeSelectors.getTheme(state),\r\n});\r\nexport default connect(mapStateToProps)(UserMenu);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport UserMenu from '../UserMenu/UserMenu';\r\n\r\nimport routes from '../../routes/routes';\r\nimport themeSelectors from '../../redux/selectors/themeSelectors';\r\n\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = ({themeColor}) => {\r\n  const {contactsPage} = routes;\r\n  return (\r\n    <ul className={s.list}>\r\n      <li className={s.item}>\r\n        <NavLink\r\n          className={s[`link${themeColor}`]}\r\n          activeClassName={s.active}\r\n          exact\r\n          to={contactsPage.path}\r\n        >\r\n          <h2>MY CONTACTS</h2>\r\n        </NavLink> \r\n        <UserMenu/>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeColor: themeSelectors.getTheme(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navigation);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport routes from \"../../routes/routes\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../../redux/selectors/authSelectors\";\r\n\r\nconst PrivatRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) => {\r\n      return isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={routes.signInPage.path} />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivatRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport routes from \"../../routes/routes\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../../redux/selectors/authSelectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && restricted ? (\r\n        <Redirect to={routes.contactsPage.path} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, {Component, Suspense} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Switch, Redirect} from 'react-router-dom';\r\n\r\nimport ThemeButton from './ThemeButton/ThemeButton';\r\nimport Wrapper from './Wrapper/Wrapper';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport routes from '../routes/routes';\r\nimport authOperations from '../redux/actions/authOperations';\r\nimport PrivatRoute from '../components/Routes/PrivatRoute';\r\nimport PublicRoute from '../components/Routes/PublicRoute';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    const {contactsPage, signUpPage, signInPage} = routes;\r\n    return (\r\n      <Wrapper>\r\n        <Navigation />\r\n        <Suspense fallback={<div></div>}>\r\n          <Switch>\r\n            <PrivatRoute {...contactsPage} />\r\n            <PublicRoute {...signUpPage} />\r\n            <PublicRoute {...signInPage} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </Suspense>\r\n        <ThemeButton />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport {persistor} from \"./redux/store\";\n\n\nimport App from \"./components/App\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}